1)Imagine you're a software developer working on a project in a remote village. One day, an 
elderly villager approaches you, intrigued by your work. They share stories of their youth, 
when converting temperatures required complex calculations. Curious, they ask how your 
program, which converts Celsius to Fahrenheit, might have impacted their past.
 coding:
1)A import java.util.*;
class main{
    public static void main(String[] args){
 Scanner s=new Scanner(System.in);
 double a=s.nextDouble();
 double b=(a*9/5)+32;
 System.out.println("Temperature in Fahrenheit: "+b);
    }
}

1)You are developing a BMI calculator for a health app. During the onboarding process, users 
are prompted to input their weight and height. Implement a program where users can enter 
their weight in kilograms and height in meters. Your program should then compute and 
display their Body Mass Index (BMI). This tool helps users track their health and fitness 
progress.
Coding:
1B import java.util.*;
class main{
    public static void main(String a[]){
        Scanner s=new Scanner(System.in);
        int i=s.nextInt();
        float f=s.nextFloat();
        float r=i/(f*f);
        int b=(int)r;
        System.out.println("Your BMI is: "+b);
    }
}
1)A group of friends explores an ancient code-breaking game. Each player inputs a single 
character, unveiling hidden messages encoded in ASCII. As they decipher symbols, they 
uncover clues to an ancient treasure. Help them by Implement a code to find a ascii value of 
a character
1C)import java.util.*;
class main{
    public static void main(String a[]){
        Scanner s= new Scanner(System.in);
        char c=s.next().charAt(0);
        System.out.println("Character: "+c);
        int d=(int)c;
        System.out.println("ASCII value: "+d);
        
    }
}
1)You're tasked with developing a Java program for a binary-to-decimal converter tool. The 
program expects users to input a binary number as a string. After receiving the input, it 
converts the binary number to its decimal equivalent and prints the decimal value as an 
integer.
1D import java.util.*;
class main{
    public static void main(String a[]){
        Scanner s=new Scanner(System.in);
        String i=s.nextLine();
        int j=Integer.parseInt(i,2);
        System.out.println("Decimal value: "+j);
  
  }
}
1)You're tasked with developing a simple currency converter tool. The program should prompt 
users to input an amount in USD and convert it to EUR using a predefined exchange rate. 
Upon input, it calculates and displays the converted amount in EUR. This tool facilitates 
quick currency conversions, aiding users in international financial transactions and budget 
planning.

1E import java.util.*;
class main{
    public static void main(String a[]){
        Scanner s=new Scanner(System.in);
        int i=s.nextInt();
        int b=(int)(i*0.92);
        System.out.println(b);
    }
}
2)You're developing a retail billing system. Develop a program that calculates the total cost of 
a purchase after applying discounts. If the purchase is over $1000, apply a 10% discount; 
between $500 and $1000, apply 5%; otherwise, no discount. Prompt users for the purchase 
amount, then display the total cost after discount.
2) A import java.util.*;
class main{
    public static void main(String a[])
    {
        Scanner s=new Scanner(System.in);
        float i=s.nextFloat();
        float m;
        if(i>1000)
        {
            m=(i*10)/100;
            System.out.println("Total cost after discount: "+(i-m));
        }
            else if(500<=i && i<=1000)
            {
                m=(i*5)/100;
                System.out.println("Total cost after discount: "+(i-m));
            }
            else{
                m=(float)i;
                System.out.println("Total cost after discount: "+m);
            }
        }
    }
2)You've created a simple program that prompts users to input a number. Once the number is 
entered, the program analyzes it to determine if it's positive, negative, or zero. Based on this 
analysis, it provides immediate feedback to the user regarding the nature of the number.
2B import java.util.*;
class main{
    public static void main(String a[])
    {
        Scanner s=new Scanner(System.in);
        int i=s.nextInt();
        if(i>0)
        {
            System.out.println("The entered number is positive.");
        }
        else if(i<0)
        {
            System.out.println("The entered number is negative.");
        }
        else{
            System.out.println("The entered number is zero.");
        }
    }
}
2)You're building a geometry tool for analyzing triangles. Design a program that prompts users 
to input the lengths of three sides of a triangle, determines if it's equilateral, isosceles, or 
scalene using if statements, and displays the result
2C) import java.util.*;
class main
{
    public static void main(String a[])
    {
        Scanner s=new Scanner(System.in);
        int x=s.nextInt();
        int y=s.nextInt();
        int z=s.nextInt();
        if(x==y && y==z)
        {
            System.out.println("The triangle is equilateral.");
        }
        else if(x==y || y==z || x==z)
        {
            System.out.println("The triangle is isosceles.");
        }
        else
        {
            System.out.println("The triangle is scalene.");
        }
    }
}
2)You're developing a calendar utility to translate numerical representations of weekdays into 
their respective names. Design a program prompting users to input a number representing a 
day (1 for Monday, 2 for Tuesday, …, 7 for Sunday), and output the corresponding day 
name using a switch statement.
 2D import java.util.*;
class main{
    public static void main(String a[]){
        Scanner s=new Scanner(System.in);
        int i=s.nextInt();
        switch(i)
        {
            case 1:
                System.out.println("The corresponding day is Monday");
                break;
            case 2:
                System.out.println("The corresponding day is Tuesday");
                break;
             case 3:
                System.out.println("The corresponding day is Wednesday");
                break;
            case 4:
                System.out.println("The corresponding day is Thursday");
                break;
            case 5:
                System.out.println("The corresponding day is Friday");
                break;
             case 6:
                System.out.println("The corresponding day is Saturday");
                break;
            case 7:
                System.out.println("The corresponding day is Sunday");
                break;
            default:
                System.out.println("The corresponding day is Invalid day number");
                
        }
    }
}
EX 3(a) :
Imagine you're a teacher creating a fun learning tool. With your program, generate 
multiplication tables from 1 to 10 for each number entered. Every loop iteration reveals a 
new set of answers, fostering a deeper understanding of multiplication.
3 A import java.util.*;
class main
{
    public static void main(String ar[])
    {
        Scanner s=new Scanner(System.in);
        int a=s.nextInt();
        System.out.println("Multiplication table for "+a+":");
        for(int i=1;i<=10;i++)
        {
            System.out.println(a+" × "+i+" = "+(a*i));
        }
    }
}
3)Imagine you're a mathematical consultant assisting clients with number inquiries. A user 
enters a positive integer, seeking its factors. Implement a program to help the user to find 
the factors the numbers.
3B import java.util.*;
class main
{
    public static void main(String ar[])
    {
        Scanner s=new Scanner(System.in);
        int a=s.nextInt();
        System.out.print("Factors of "+a+": ");
        for(int i=1;i<=a;i++)
        {
            if(a%i==0)
            {
                System.out.print(i+" ");
            }
        }
    }
}
3)In a school competition, students are participating in a relay race. The race organizer needs 
to arrange batons for each team. They have batons in sets, where each set contains a 
certain number of batons.
3C import java.util.Scanner;
public class LCMCalculator
{
public static int findLCM(int num1, int num2)
{
int lcm = (num1 > num2) ? num1 : num2;
while (true)
{
if (lcm % num1 == 0 && lcm % num2 == 0)
{
return lcm;
} lcm++;
}

}
public static void main(String[] args)
{
Scanner scanner = new Scanner(System.in);
int num1 = scanner.nextInt();
int num2 = scanner.nextInt();
int lcm = findLCM(num1, num2);
System.out.println(+ lcm);
scanner.close();
}
}
3)You're tasked with developing a tool that computes squares of numbers within specified 
limits. Imagine you're embarking on a journey through the realm of numbers, exploring their 
squares. Implement a program using a do-while loop to iterate through these numbers, 
uncovering their squares along the way.

3D import java.util.*;
class main
{
    public static void main(String ar[])
    {
        Scanner s=new Scanner(System.in);
        int j=s.nextInt();
        System.out.print("Squares of numbers from 1 to "+j+": ");
        for(int i=1;i<=j;i++)
        {
            int sum=(i*i);
            System.out.print(sum+" ");
        }
    }
}
4)Imagine you're a curious explorer delving into the world of prime numbers. Envision seekers 
inputting their chosen numbers eagerly. Implement a program to traverse through each 
number's factors up to its square root, determining its primality. Each iteration brings you 
closer to unraveling the mysteries of prime numbers
4 A import java.util.Scanner;
public class number{   
    public static void main(String args[])    {   
        Scanner sc=new Scanner(System.in);        
        int a=sc.nextInt();     
        if(a<0)        {         
            System.out.println("Error: Please enter a positive integer.");        
            
        }       
        else        {           
            boolean p=true;          
            if(a<=1)         
            {              
                p=false;           
                }           
                else            {            
                    for(int i=2;i<=a/2;i++)                {               
                        if(a%i==0)                    {                   
                            p=false;                      
                            break;                   
                            }   
                            }          
                            }        
                            if(p)            {              
                                System.out.println(a+ " is a prime number.");       
                                }            else       
                                {              
                                    System.out.println(a+" is not a prime number.");
                                    }        }    }}
4)Imagine you're a software developer creating a tool for numerical transformations. A user, 
fascinated by number manipulation, inputs a positive integer. Implement a program to 
gracefully reverse the digits of their number using a while loop, providing them with the 
mirror image of their input for exploration
 4B import java.util.*;
class main
{
    public static void main(String ar[])
    {
        Scanner s=new Scanner(System.in);
        int a=s.nextInt();
        int c=0;
        if(a>0)
        {
            while(a!=0)
            {
                int d=a%10;
                c=c*10+d;
                a=a/10;
            }
            System.out.println("Reversed number: "+c);
        }
        else{
            System.out.println("Error: Please enter a positive integer.");
        }
    
    }
}
5)Imagine you're developing software for a weather monitoring station. You're tasked with 
creating a program to analyze temperature data stored in an array of doubles. Your goal is to 
determine the maximum temperature recorded and its corresponding time index
 5A import java.io.*;
import java.util.*;
class main{
    public static void main(String args[]){
        Scanner in=new Scanner(System.in);
        int a=in.nextInt();
        double arr[]=new double[a];
        for(int i=0;i<a;i++){
            arr[i]=in.nextDouble();
        }
        double max=0;
        int index=0;
        for(int i=0;i<a;i++){
            if(max<arr[i]){
                max=arr[i];
                index=i;
            }
        }
        System.out.println("Maximum Temperature: "+max);
        System.out.println("Index of Maximum Temperature: "+index);
    }
}
5)You're developing software for a temperature monitoring system. Your task is to create a 
program that analyzes temperature data stored in an array of integers. The program finds 
the highest recorded temperature, along with its index.
5B import java.io.*;
import java.util.*;
class main{
    public static void main(String args[]){
        Scanner in=new Scanner(System.in);
        int a=in.nextInt();
        int[] arr=new int[a];
        for(int i=0;i<a;i++){
            arr[i]=in.nextInt();
        }
        int max=arr[0];
        int index=0;
        for(int i=0;i<a;i++){
            if(max<arr[i]){
                max=arr[i];
                index=i;
            }
        }
        System.out.println("Maximum Element: "+max);
        System.out.println("Index of Maximum Element: "+index);
    }
}
5)Suppose you are building a leaderboard for a gaming competition. You need to determine 
the player who achieved the second-highest score. Develop a program to find the secondhighest score from an array of player scores. Ensure that your program handles scenarios 
where there might be ties for the highest score and ensures that the second-highest score is 
accurately identified.
5c import java.util.*;
public class temp{
    public static void main(String args[]){
        Scanner in=new Scanner(System.in);
        
        int n=in.nextInt();
        int arr[]=new int[n];
        for(int i=0;i<n;i++)
        arr[i]=in.nextInt();
        int max=-100;
        for(int i=0;i<n;i++)
        if(max<arr[i])
        {
            max=arr[i];
        }
        int max1=-100;
        for(int i=0;i<n;i++)
        {
            if(max!=arr[i])
            {
                if(max1<arr[i])
                max1=arr[i];
            }
        }
        System.out.print(max1);
    }
}
6)You're developing software for a financial analytics tool. Your task is to design a program to 
process a dataset stored in a 2D array of integers. The program calculates the total value of 
all entries in the dataset and prints the result
 6A import java.util.*;
class main{
    public static void main(String args[]){
        Scanner in=new Scanner(System.in);
        int rowCount=0;
        int sum=0;
        while(in.hasNextLine()){
            String a=in.nextLine();
            if(a.isEmpty()){
                break;
            }
            String [] elements=a.split(" ");
            rowCount++;
            for(String element:elements){
                sum+=Integer.parseInt(element);
            }
        }
        System.out.println("Sum of all elements in the 2D array: "+sum);
    }
}
6)You're developing a data analysis tool for financial data. Your task is to develop a program 
to process a dataset stored in a 2D array of doubles. The program identifies the highest 
value in the dataset, along with its corresponding row and column indices
6B import java.io.*;
import java.util.*;
class main{
    public static void main(String args[]){
        Scanner in=new Scanner(System.in);
        int a=in.nextInt();
        int b=in.nextInt();
        double[][] arr=new double[a][b];
        for(int i=0;i<a;i++){
            for(int j=0;j<b;j++){
                arr[i][j]=in.nextDouble();
            }
        }
        double max=arr[0][0];
        int ri=0;
        int ci=0;
        for(int i=0;i<a;i++){
            for(int j=0;j<b;j++){
                if(max<arr[i][j]){
                    max=arr[i][j];
                    ri=i;
                    ci=j;
                }
            }
        }
        System.out.println("Maximum Element: "+max);
        System.out.println("Row Index of Maximum Element: "+ri);
        System.out.println("Column Index of Maximum Element: "+ci);
    }
}
6)You're developing software for a scientific data analysis tool. Your task is to design a 
program to process matrices. The program initializes a 2D array representing a matrix and 
computes its transpose, providing both the original and transposed matrices for further 
analysis.
6C import java.util.*;
public class matrix{
public static void main(String [] args){
    Scanner sc=new Scanner(System.in);
    int a=sc.nextInt();
    int b=sc.nextInt();
    int arr[][]=new int[a][b];
    for(int i=0;i<a;i++)
    {
        for(int j=0;j<b;j++)
        {
            arr[i][j]=sc.nextInt();
        }
    }
    System.out.println("Original Matrix:");
    for(int i=0;i<a;i++)
    {
        for(int j=0;j<b;j++){
            System.out.print(arr[i][j]+" ");
        }
        System.out.println("");
    }
    System.out.println("Transposed Matrix:");
    for(int i=0;i<b;i++)
    {
        for(int j=0;j<a;j++)
        {
            System.out.print(arr[j][i]+" ");
        }
        System.out.println("");
    }
}
}
7)As a linguistic data analyst, you're developing a Text Refinement Tool to process text inputs. 
Users expect the tool to remove duplicate characters and count occurrences of vowels for 
linguistic analysis. The tool accepts a string as input and redefines it, presenting the refined 
text without duplicate characters and providing counts of vowels. Design a program that 
meets these requirements efficiently.
 7A
 import java.util.*;
class Main{    
    public static void main(String args[])    {      
        Scanner sc=new Scanner(System.in);      
        String ab=sc.nextLine();       
        ab=ab.replace(" ","");        
        char[] arr=ab.toCharArray();       
        int a=0,e=0,i=0,o=0,u=0;        
        for(int j=0;j<ab.length();j++){          
            if(arr[j]=='a'||arr[j]=='A'){               
                a++;            }        
                else if(arr[j]=='e'||arr[j]=='E'){            
                    e++;            }         
                    else if(arr[j]=='i'||arr[j]=='I'){            
                        i++;            }          
                        else if(arr[j]=='o'||arr[j]=='O'){         
                            o++;            }          
                            else if(arr[j]=='u'||arr[j]=='U'){     
                                u++;            }       
                                }        
                                String nodup=Duplicates(ab);    
                                System.out.println(nodup);      
                                if(a==0&&e==0&i==0&&o==0&&u==0){           
                                    System.out.print("No vowels found.");    
                }        
                                    if(a!=0)     
                    System.out.println("a"+a);      
                    if(e!=0)      
                    System.out.println("e"+e);      
                    if(i!=0)     
                   System.out.println("i"+i);       
                   if(o!=0)       
                  System.out.println("o"+o);       
                  if(u!=0)        
                 System.out.println("u"+u);    }   
                public static String Duplicates(String str){ 
                                        Set<Character>unique=new HashSet<>();        
                                    StringBuilder result=new StringBuilder();       
                                    for(char c:str.toCharArray()){           
                                        if(unique.add(c)){               
                                            result.append(c);            }    }   
                                            return result.toString();}}
EX 7(b) :
You are tasked with enhancing a popular text-editing app with a new feature to stylize text 
for a more captivating presentation. With the app's extensive user base, efficiency and 
performance are critical considerations.
7 B mport java.util.*;
class main{
    public static void main(String args[]){
        Scanner ob=new Scanner(System.in);
        String a=ob.nextLine();
        String w[]=a.split(" ");
        for(int i=w.length-1;i>=0;i--){
            for(int j=0;j<w[i].length();j++){
                if(Character.isUpperCase(w[i].charAt(j))){
                    System.out.print(Character.toLowerCase(w[i].charAt(j)));
                }
                else if(Character.isLowerCase(w[i].charAt(j))){
                    System.out.print(Character.toUpperCase(w[i].charAt(j)));
                }
            }
            System.out.print(" ");
        }
    }
}
                                            
7)You're developing a tool that reverse a given string S, such that the reversed string does not 
contain any repeated characters or spaces. The program should eliminate any duplicate 
characters and spaces while reversing the string.
7C
 import java.util.*;
public class Main{    
    public static void main(String args[])    {    
        Scanner sc=new Scanner(System.in);       
        if(sc.hasNextInt()){            
            System.out.println("Invalid input");          
            return;        }       
            else       
            {           
                String inp=sc.nextLine();           
                String ans= "";          
                for(int i=inp.length()-1;i>=0;i--)          
                {               
                    char ch=inp.charAt(i);            
                    if(ch>='a'&& ch<='z'||ch>='A' && ch<='Z'||ch==' '){ 
                    if(!ans.contains(String.valueOf(ch))&&ch!=' '){   
                            
                         ans+=ch;
                    }
                } 
                         else                {                   
                         System.out.println("Invalid input");     
                         return;
                } 
           }       
                         System.out.println(ans); 
       }
    }}
EX 9(a) :
9)Imagine you're developing a utility to determine users' current ages for a registration 
platform. Develop a program that prompts users to input their birth year
9 A import java.util.*;
import java.time.*;class main{  
    public static void main(String args[])    {     
        Scanner inp=new Scanner(System.in);      
        int current=LocalDate.now().getYear();       
        int num=inp.nextInt();        
        if(num>0)        {            
            System.out.print(current-num);       
            }        else      
            {            System.out.print("Invalid input. Birth year cannot be negative.");      
            }    }}
9)In a financial application, Your task is to implement a function to round transaction amounts 
to the nearest integer to ensure accurate representation of monetary values in reports and 
accounting records
9)B import java.util.*;
public class Main{   
    public static void main(String args[])    {    
        Scanner sc=new Scanner(System.in);       
        float a=sc.nextFloat();       
        int b=Math.round(a);       
        System.out.print("Rounded number: "+b);   
 }}






























